/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void periodslider1changed(GCustomSlider source, GEvent event) { //_CODE_:periodslider1:457807:
  l.period = periodslider1.getValueI();
} //_CODE_:periodslider1:457807:

public void ampslider1changed(GCustomSlider source, GEvent event) { //_CODE_:ampslider1:750770:
  l.amp = ampslider1.getValueI();
} //_CODE_:ampslider1:750770:

public void rknob1_turn1(GKnob source, GEvent event) { //_CODE_:rknob1:990804:
  l.r = rknob1.getValueI();
} //_CODE_:rknob1:990804:

public void gknob2_turn1(GKnob source, GEvent event) { //_CODE_:gknob2:812439:
  l.g = gknob2.getValueI();
} //_CODE_:gknob2:812439:

public void bknob3_turn1(GKnob source, GEvent event) { //_CODE_:bknob3:967284:
  l.b = bknob3.getValueI();
} //_CODE_:bknob3:967284:

public void dropList1_click1(GDropList source, GEvent event) { //_CODE_:dropList1:296751:
  l.sct = dropList1.getSelectedText();
} //_CODE_:dropList1:296751:

public void periodslider2changed(GCustomSlider source, GEvent event) { //_CODE_:periodslider2:668275:
  k.period = periodslider2.getValueI();
} //_CODE_:periodslider2:668275:

public void ampslider2changed(GCustomSlider source, GEvent event) { //_CODE_:ampslider2:586113:
  k.amp = ampslider2.getValueI();
} //_CODE_:ampslider2:586113:

public void rknob2_turn1(GKnob source, GEvent event) { //_CODE_:rknob2:410164:
  k.r = rknob2.getValueI();
} //_CODE_:rknob2:410164:

public void gknob1_turn1(GKnob source, GEvent event) { //_CODE_:gknob1:452544:
  k.g = gknob1.getValueI();
} //_CODE_:gknob1:452544:

public void bknob1_turn1(GKnob source, GEvent event) { //_CODE_:bknob1:631006:
  k.b = bknob1.getValueI();
} //_CODE_:bknob1:631006:

public void dropList2_click1(GDropList source, GEvent event) { //_CODE_:dropList2:437936:
  k.sct = dropList2.getSelectedText();
} //_CODE_:dropList2:437936:

public void dropList3_click1(GDropList source, GEvent event) { //_CODE_:dropList3:809053:
  if(dropList3.getSelectedText().equals("Addition")){
    lk.sct = "Addition";
  }
  else if(dropList3.getSelectedText().equals("Subtraction")){
    lk.sct = "Subtraction";
  }
  else if(dropList3.getSelectedText().equals("Multiplication")){
    lk.sct = "Multiplication";
  }
  else if(dropList3.getSelectedText().equals("Division")){
    lk.sct = "Division";
  }
  if(dropList3.getSelectedText().equals("Composite line1(line2)")){
    lk.sct = "Composite line1(line2)";
  }
  if(dropList3.getSelectedText().equals("Composite line2(line1)")){
    lk.sct = "Composite line2(line1)";
  }
} //_CODE_:dropList3:809053:

public void speedslider1changed(GCustomSlider source, GEvent event) { //_CODE_:speedslider1:370232:
  l.deltat = speedslider1.getValueF();
} //_CODE_:speedslider1:370232:

public void speedslider2changed(GCustomSlider source, GEvent event) { //_CODE_:speedslider2:883600:
  k.deltat = speedslider2.getValueF();
} //_CODE_:speedslider2:883600:

public void button1_click1(GButton source, GEvent event) { //_CODE_:button1:430801:
  setControllerValues(800,230,60,75,0.05,0.05,0,1,0);
  getControllerValues();
} //_CODE_:button1:430801:

public void button2_click1(GButton source, GEvent event) { //_CODE_:button2:207644:
  setControllerValues(400,200,100,90,0.05,0.05,2,1,1);
  getControllerValues();
} //_CODE_:button2:207644:

public void button3_click1(GButton source, GEvent event) { //_CODE_:button3:656482:
  setControllerValues(100,190,100,90,0.05,0.05,4,5,1);
  getControllerValues();
} //_CODE_:button3:656482:

public void button4_click1(GButton source, GEvent event) { //_CODE_:button4:876488:
  setControllerValues(800,150,20,20,0.05,0.05,0,2,2);
  getControllerValues();
} //_CODE_:button4:876488:

public void button5_click1(GButton source, GEvent event) { //_CODE_:button5:475108:
  setControllerValues(800,800,90,25,0.03,0.03,0,1,4);
  getControllerValues();
} //_CODE_:button5:475108:

public void button6_click1(GButton source, GEvent event) { //_CODE_:button6:863840:
  setControllerValues(765,207,55,80,0.05,0.05,4,2,3);
  getControllerValues();
} //_CODE_:button6:863840:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Sketch Window");
  label1 = new GLabel(this, 982, 9, 136, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Line 1");
  label1.setLocalColorScheme(GCScheme.RED_SCHEME);
  label1.setOpaque(false);
  periodslider1 = new GCustomSlider(this, 950, 80, 200, 40, "grey_blue");
  periodslider1.setShowValue(true);
  periodslider1.setLimits(400, 1, 800);
  periodslider1.setNbrTicks(8);
  periodslider1.setShowTicks(true);
  periodslider1.setNumberFormat(G4P.INTEGER, 0);
  periodslider1.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  periodslider1.setOpaque(false);
  periodslider1.addEventHandler(this, "periodslider1changed");
  periodlabel1 = new GLabel(this, 1009, 41, 80, 20);
  periodlabel1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  periodlabel1.setText("Period");
  periodlabel1.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  periodlabel1.setOpaque(false);
  amplabel1 = new GLabel(this, 1010, 132, 80, 20);
  amplabel1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  amplabel1.setText("Amplitude");
  amplabel1.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  amplabel1.setOpaque(false);
  ampslider1 = new GCustomSlider(this, 950, 170, 200, 40, "grey_blue");
  ampslider1.setShowValue(true);
  ampslider1.setLimits(50, 1, 100);
  ampslider1.setNbrTicks(10);
  ampslider1.setShowTicks(true);
  ampslider1.setNumberFormat(G4P.INTEGER, 0);
  ampslider1.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  ampslider1.setOpaque(false);
  ampslider1.addEventHandler(this, "ampslider1changed");
  rknob1 = new GKnob(this, 950, 230, 60, 60, 0.8);
  rknob1.setTurnRange(110, 70);
  rknob1.setTurnMode(GKnob.CTRL_HORIZONTAL);
  rknob1.setSensitivity(1);
  rknob1.setShowArcOnly(false);
  rknob1.setOverArcOnly(false);
  rknob1.setIncludeOverBezel(false);
  rknob1.setShowTrack(true);
  rknob1.setLimits(255.0, 0.0, 255.0);
  rknob1.setShowTicks(true);
  rknob1.setLocalColorScheme(GCScheme.RED_SCHEME);
  rknob1.setOpaque(false);
  rknob1.addEventHandler(this, "rknob1_turn1");
  gknob2 = new GKnob(this, 1020, 230, 60, 60, 0.8);
  gknob2.setTurnRange(110, 70);
  gknob2.setTurnMode(GKnob.CTRL_HORIZONTAL);
  gknob2.setSensitivity(1);
  gknob2.setShowArcOnly(false);
  gknob2.setOverArcOnly(false);
  gknob2.setIncludeOverBezel(false);
  gknob2.setShowTrack(true);
  gknob2.setLimits(0.0, 0.0, 255.0);
  gknob2.setShowTicks(true);
  gknob2.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  gknob2.setOpaque(false);
  gknob2.addEventHandler(this, "gknob2_turn1");
  bknob3 = new GKnob(this, 1090, 230, 60, 60, 0.8);
  bknob3.setTurnRange(110, 70);
  bknob3.setTurnMode(GKnob.CTRL_HORIZONTAL);
  bknob3.setSensitivity(1);
  bknob3.setShowArcOnly(false);
  bknob3.setOverArcOnly(false);
  bknob3.setIncludeOverBezel(false);
  bknob3.setShowTrack(true);
  bknob3.setLimits(0.0, 0.0, 255.0);
  bknob3.setShowTicks(true);
  bknob3.setOpaque(false);
  bknob3.addEventHandler(this, "bknob3_turn1");
  dropList1 = new GDropList(this, 1010, 300, 90, 80, 3);
  dropList1.setItems(loadStrings("list_296751"), 0);
  dropList1.addEventHandler(this, "dropList1_click1");
  label2 = new GLabel(this, 1009, 502, 80, 20);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Line 2");
  label2.setLocalColorScheme(GCScheme.RED_SCHEME);
  label2.setOpaque(false);
  periodlabel2 = new GLabel(this, 1010, 541, 80, 20);
  periodlabel2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  periodlabel2.setText("Period");
  periodlabel2.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  periodlabel2.setOpaque(false);
  periodslider2 = new GCustomSlider(this, 950, 580, 200, 40, "grey_blue");
  periodslider2.setShowValue(true);
  periodslider2.setLimits(400, 1, 800);
  periodslider2.setNbrTicks(8);
  periodslider2.setShowTicks(true);
  periodslider2.setNumberFormat(G4P.INTEGER, 0);
  periodslider2.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  periodslider2.setOpaque(false);
  periodslider2.addEventHandler(this, "periodslider2changed");
  amplabel2 = new GLabel(this, 1010, 630, 80, 20);
  amplabel2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  amplabel2.setText("Amplitude");
  amplabel2.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  amplabel2.setOpaque(false);
  ampslider2 = new GCustomSlider(this, 950, 670, 200, 40, "grey_blue");
  ampslider2.setShowValue(true);
  ampslider2.setLimits(50, 1, 100);
  ampslider2.setNbrTicks(10);
  ampslider2.setShowTicks(true);
  ampslider2.setNumberFormat(G4P.INTEGER, 0);
  ampslider2.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  ampslider2.setOpaque(false);
  ampslider2.addEventHandler(this, "ampslider2changed");
  rknob2 = new GKnob(this, 950, 730, 60, 60, 0.8);
  rknob2.setTurnRange(110, 70);
  rknob2.setTurnMode(GKnob.CTRL_HORIZONTAL);
  rknob2.setSensitivity(1);
  rknob2.setShowArcOnly(false);
  rknob2.setOverArcOnly(false);
  rknob2.setIncludeOverBezel(false);
  rknob2.setShowTrack(true);
  rknob2.setLimits(0.0, 0.0, 255.0);
  rknob2.setShowTicks(true);
  rknob2.setLocalColorScheme(GCScheme.RED_SCHEME);
  rknob2.setOpaque(false);
  rknob2.addEventHandler(this, "rknob2_turn1");
  gknob1 = new GKnob(this, 1020, 730, 60, 60, 0.8);
  gknob1.setTurnRange(110, 70);
  gknob1.setTurnMode(GKnob.CTRL_HORIZONTAL);
  gknob1.setSensitivity(1);
  gknob1.setShowArcOnly(false);
  gknob1.setOverArcOnly(false);
  gknob1.setIncludeOverBezel(false);
  gknob1.setShowTrack(true);
  gknob1.setLimits(0.0, 0.0, 255.0);
  gknob1.setShowTicks(true);
  gknob1.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  gknob1.setOpaque(false);
  gknob1.addEventHandler(this, "gknob1_turn1");
  bknob1 = new GKnob(this, 1090, 730, 60, 60, 0.8);
  bknob1.setTurnRange(110, 70);
  bknob1.setTurnMode(GKnob.CTRL_HORIZONTAL);
  bknob1.setSensitivity(1);
  bknob1.setShowArcOnly(false);
  bknob1.setOverArcOnly(false);
  bknob1.setIncludeOverBezel(false);
  bknob1.setShowTrack(true);
  bknob1.setLimits(255.0, 0.0, 255.0);
  bknob1.setShowTicks(true);
  bknob1.setOpaque(false);
  bknob1.addEventHandler(this, "bknob1_turn1");
  dropList2 = new GDropList(this, 1010, 800, 90, 80, 3);
  dropList2.setItems(loadStrings("list_437936"), 0);
  dropList2.addEventHandler(this, "dropList2_click1");
  dropList3 = new GDropList(this, 1006, 413, 90, 80, 3);
  dropList3.setItems(loadStrings("list_809053"), 0);
  dropList3.addEventHandler(this, "dropList3_click1");
  label3 = new GLabel(this, 1010, 380, 80, 20);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Middle Line");
  label3.setLocalColorScheme(GCScheme.RED_SCHEME);
  label3.setOpaque(false);
  speedslider1 = new GCustomSlider(this, 830, 80, 130, 60, "grey_blue");
  speedslider1.setRotation(PI/2, GControlMode.CORNER);
  speedslider1.setLimits(0.01, 0.0, 0.05);
  speedslider1.setNbrTicks(5);
  speedslider1.setStickToTicks(true);
  speedslider1.setShowTicks(true);
  speedslider1.setNumberFormat(G4P.DECIMAL, 2);
  speedslider1.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  speedslider1.setOpaque(false);
  speedslider1.addEventHandler(this, "speedslider1changed");
  label4 = new GLabel(this, 760, 50, 80, 20);
  label4.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label4.setText("Line 1 Speed");
  label4.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  label4.setOpaque(false);
  speedslider2 = new GCustomSlider(this, 830, 650, 130, 60, "grey_blue");
  speedslider2.setRotation(PI/2, GControlMode.CORNER);
  speedslider2.setLimits(0.01, 0.0, 0.05);
  speedslider2.setNbrTicks(5);
  speedslider2.setStickToTicks(true);
  speedslider2.setShowTicks(true);
  speedslider2.setNumberFormat(G4P.DECIMAL, 2);
  speedslider2.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  speedslider2.setOpaque(false);
  speedslider2.addEventHandler(this, "speedslider2changed");
  label5 = new GLabel(this, 760, 620, 80, 20);
  label5.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label5.setText("Line 2 Speed");
  label5.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  label5.setOpaque(false);
  button1 = new GButton(this, 770, 360, 80, 30);
  button1.setText("Demo 1");
  button1.addEventHandler(this, "button1_click1");
  button2 = new GButton(this, 870, 360, 80, 30);
  button2.setText("Demo 2");
  button2.addEventHandler(this, "button2_click1");
  button3 = new GButton(this, 770, 420, 80, 30);
  button3.setText("Demo 3");
  button3.addEventHandler(this, "button3_click1");
  button4 = new GButton(this, 870, 420, 80, 30);
  button4.setText("Demo 4");
  button4.addEventHandler(this, "button4_click1");
  button5 = new GButton(this, 770, 480, 80, 30);
  button5.setText("Demo 5");
  button5.addEventHandler(this, "button5_click1");
  button6 = new GButton(this, 870, 480, 80, 30);
  button6.setText("Demo 6");
  button6.addEventHandler(this, "button6_click1");
}

// Variable declarations 
// autogenerated do not edit
GLabel label1; 
GCustomSlider periodslider1; 
GLabel periodlabel1; 
GLabel amplabel1; 
GCustomSlider ampslider1; 
GKnob rknob1; 
GKnob gknob2; 
GKnob bknob3; 
GDropList dropList1; 
GLabel label2; 
GLabel periodlabel2; 
GCustomSlider periodslider2; 
GLabel amplabel2; 
GCustomSlider ampslider2; 
GKnob rknob2; 
GKnob gknob1; 
GKnob bknob1; 
GDropList dropList2; 
GDropList dropList3; 
GLabel label3; 
GCustomSlider speedslider1; 
GLabel label4; 
GCustomSlider speedslider2; 
GLabel label5; 
GButton button1; 
GButton button2; 
GButton button3; 
GButton button4; 
GButton button5; 
GButton button6; 